{%- comment -%}
  **
  * Sidebar Block type support
  *
{%- endcomment-%}
{%- assign blocksSupport = 'category,banner,filter_group,product_recommend' | split: ',' -%}
{%- liquid
  assign currentObj = collection
-%}

{%- capture section_class -%}
  {{- -}}sidebar{{ template | split: '.' | first | camelize -}}
  {{- -}}|sidebar-section
  {{- -}}|section-{{- section.id -}}
{%- endcapture -%}{%- assign section_class = section_class | strip | split: '|' | join: ' ' -%}
{%- capture sectionID -%}.section-{{section.id}}{%- endcapture-%}


{%- capture content -%}
<div id="sidebarDrawer" class="{{section_class}}" data-section-type="collection-sidebar" data-section-id="{{section.id}}">
  <div class="section_content-overlay"></div>

  <div class="section_content-wrapper">

      <a href="#" onclick="return false" class="js-toggle-sb sidebarDrawer-close {% unless settings.collection_page == 'no-sidebar' %} d-lg-none {%- endunless -%}" data-target="sidebarDrawer" data-role="close">{%- render 'svg', type: 'close' -%}</a>

    <div class="section_content-body">

      {%- if section.blocks.size > 0 -%}

        {%- for block in section.blocks -%}

          {%- unless blocksSupport contains block.type -%}{%- continue -%}{%- endunless -%}

          {%- comment -%}
            **
            * Filter group render
            *
          {%- endcomment-%}
          {%- if block.type == 'filter_group' -%}
            {%- capture filterGroup -%}{%- render 'filter-group', type: '', collection: currentObj, block: block, filterGroup: filterGroup  -%}{%- endcapture -%}
            {%- if filterGroup == blank -%}{%- continue -%}{%- endif -%}
          {%- endif -%}


          {%- comment -%}
            **
            * Banner content first style
            *
          {%- endcomment-%}
          {%- if block.type contains 'style_' -%}
            {%- if  bannerCount == blank  -%}
              {%- assign blockType = block.type | remove: 'style_' -%}

              {%- capture itemID -%}
                {%- case block.type -%}
                  {%- when 'style_content' %} .featured_block-content-inner .block_content-text-
                  {%- when 'style_button' %} .featured_block-content-inner .btn-content
                {%- endcase -%}
              {%- endcapture -%}

              {%- capture block_css -%}
                {%- render 'snippet-block-style', type: blockType, block: block, itemClass: itemID, sectionID: sectionID, blockID: '' -%}
              {%- endcapture -%}{%- assign section_css = section_css | append: block_css -%}
            {%- endif -%}

            {%- continue -%}
          {%- endif -%}

          {%- comment -%}
            **
            * Block content
            *
          {%- endcomment-%}
          {%- capture blockID -%}.featured_block-{{block.type}}.block-{{block.id}}{%- endcapture -%}

          <section class="featured_block featured_block-{{block.type}} block-{{block.id}}"{{block.shopify_attributes}}>
            {%- assign sidebarBlock_exist = true -%}

            {%- case block.type -%}

              {%- when 'category' -%}
                {%- liquid
                  assign menu       = block.settings.category
                  assign menuList   = linklists[menu]
                  assign menuTitle  = block.settings.heading | default: menuList.title
                -%}

                {%- if menu != blank and menuList.links.size > 0 -%}
                  <div class="menu_list-ui menu-toggle"{{block.shopify_attributes}}>
                    <div class="menu_list-header">
                      <p class="sb-title">{{ menuTitle }}</p>
                    </div>
                    <div class="menu_list-body">
                      <ul class="menu_list-wrapper">
                        {%- for link in linklists[menu].links -%}
                          {%- liquid
                            if link.url contains 'collections'
                              assign collection_handle = link.url | split: '/'  | last
                              assign selected_collection =  collections[collection_handle]
                            endif
                          -%}

                          <li class="menu_list-item">
                            <a href="{{link.url}}" class="dropdown-link">{{link.title}} <span class="number">{{selected_collection.all_products_count}}</span></a>
                            {%- if link.links != blank -%}
                              <span class="js-btn-collapse expand" data-target="sb-collection-{{block.id | append: forloop.index}}"><a href="#" onclick="return false"></a></span>
                              <ul class="dropdown-menu collapse" id="sb-collection-{{block.id | append: forloop.index}}">
                                {%- for child_link in link.links -%}
                                  {%- liquid
                                    if child_link.url contains 'collections'
                                      assign sub_collection_handle = child_link.url | split: '/'  | last
                                      assign sub_selected_collection =  collections[sub_collection_handle]
                                    endif
                                  -%}
                                  <li class="menu_list-item">
                                    <a href="{{child_link.url}}">{{child_link.title}} <span class="number">{{sub_selected_collection.all_products_count}}</span></a>
                                  </li>
                                {%- endfor -%}
                              </ul>
                            {%- endif -%}
                          </li>
                        {%- endfor -%}
                      </ul>
                    </div>
                  </div>

                {%- else -%}
                    {%- render 'svgset', type: 'empty-menu' -%}
                {%- endif -%}
              {% comment %} end {% endcomment %}

              {%- when 'banner' -%}
                {%- liquid
                  assign __banner          = block.settings.banner
                  assign __text_1          = block.settings.text_1
                  assign __text_2          = block.settings.text_2
                  assign __btn_label       = block.settings.btn_label
                  assign __btn_url         = block.settings.btn_url | default: 'javascript:void(0);'
                -%}

                {%- unless __banner == blank -%}

                  {%- comment -%}
                    **
                    * Banner Image
                    *
                  {%- endcomment-%}
                  {%- render 'image-style', image: __banner -%}

                  {%- unless __text_1 == blank and __text_2 == blank and __btn_label == blank -%}
                    <div class="featured_block-content overlay-ui">
                      <div class="featured_block-content-inner">

                        {%- comment -%}
                          **
                          * Heading & Subheading
                          *
                        {%- endcomment-%}
                        {%- unless __text_1 == blank -%}<div class="block_content-text block_content-text-1">{{ __text_1 }}</div>{%- endunless -%}
                        {%- unless __text_2 == blank -%}<div class="block_content-text block_content-text-2">{{ __text_2 }}</div>{%- endunless -%}

                        {%- comment -%}
                          **
                          * Button
                          *
                        {%- endcomment-%}
                        {%- unless __btn_label == blank -%}
                          <div class="block_content-button">
                            <a href="{{ __btn_url | default: 'javascript:void(0);' }}" class="btn btn-content btn-{{block.settings.btn_style}}">{{ __btn_label }}</a>
                          </div>
                        {%- endunless -%}
                      </div>
                    </div>
                    {%- include 'block-custom', type: 'sidebarStyle' -%}

                  {%- endunless -%}

                {%- else -%}
                  {%- render 'svgset' -%}
                {%- endunless -%}
              {% comment %} end {% endcomment %}

              {%- when 'filter_group' -%}
                {%- if currentObj.all_tags.size > 0 and block.settings.filter_prefix != blank -%}

                  {%- render 'filter-group', type: 'render', collection: currentObj, block: block, filterGroup: filterGroup  -%}

                  {%- capture block_css -%}
                    {%- render 'css-resp', classID: blockID, nextClassID: ' .tags-list', css_value: block.settings.block_max_height, css_property: 'max-height' -%}
                  {%- endcapture -%}
                  {%- assign section_css = section_css | append: block_css -%}
                {%- endif -%}
              {% comment %} end {% endcomment %}

            {%- endcase -%}
          </section>

          {%- capture block_css -%}
            {%- render 'css-resp', classID: blockID, css_value: block.settings.margin, css_property: 'margin' -%}
          {%- endcapture -%}{%- assign section_css = section_css | append: block_css -%}
        {%- endfor -%}
      {%- endif -%}

      {%- if section.blocks.size == 0 or sidebarBlock_exist != true -%}
        <p>{{- 'general.text.no_content' | t -}}</p>
      {%- endif -%}

    </div>
  </div>
</div>

{%- capture sectionCss -%}
  {%- liquid
    assign gridLayout = section.settings.grid_layout | append: ',100%,100%'
    render 'css-resp', classID: '.layout-grid.d-grid', css_value: gridLayout, css_property: 'grid-template-columns'
    render 'css-resp', classID: '.layout-grid.d-grid', css_value: section.settings.grid_gap, css_property: 'grid-gap'
    render 'css-resp', classID: sectionID, css_value: section.settings.section_padding
  -%}
{%- endcapture -%}
{%- assign section_css = section_css | prepend: sectionCss -%}

{%- unless template contains 'blog' -%}
  {%- unless section_css == blank -%}<style>{{section_css}}</style>{%- endunless -%}
{%- endunless -%}
{%- endcapture -%}
{%- render 'compress', content: content -%}

{% schema %}
{
  "name": {
    "en": "Sidebar"
  },
  "tag": "aside",
  "class": "custom-static-sidebar",
  "settings": [
    {
      "type": "paragraph",
      "content": {
        "en": "Created by 'Collection sidebar' section"
      }
    },
    {
      "type": "text",
      "id": "grid_layout",
      "label": {
        "en": "Column Grid layout"
      },
      "default": "20% 80%",
      "placeholder": {
        "en": "E.g: 70% 30% or 100%"
      }
    },
    {
      "type": "text",
      "id": "grid_gap",
      "label": {
        "en": "Column Grid spacing"
      },
      "placeholder": {
        "en": "E.g: 15px"
      },
      "default": "30px, 15px"
    },
    {
      "type": "header",
      "content": {
        "en": "Sidebar settings"
      }
    },
    {
      "type": "text",
      "id": "section_padding",
      "label": {
        "en": "Section Padding"
      },
      "placeholder": {
        "en": "E.g: 5px 20px 5px 20px"
      },
      "info": {
        "en": "Order: Top Right Bottom Left"
      }
    }
  ],
  "blocks": [
    {
      "type": "filter_group",
      "name": {
        "en": "Filter group"
      },
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": {
            "en": "Heading"
          },
          "default": "Filter by"
        },
        {
          "type": "text",
          "id": "filter_prefix",
          "label": {
            "en": "Filter Prefix"
          },
          "placeholder": {
            "en": "E.g: Color"
          },
          "info": {
            "en": "Requirement. The value must be unique"
          }
        },
        {
          "type": "textarea",
          "id": "filter_tags",
          "label": {
            "en": "Tags"
          },
          "placeholder": {
            "en": "Eg: Blue, Red, Yellow, ..."
          },
          "info": {
            "en": "Separate by comma. Using +ALL to show all tags"
          }
        },
        {
          "type": "select",
          "id": "direction",
          "label": {
            "en": "Direction"
          },
          "options": [
            {
              "value": "column",
              "label": {
                "en": "Columns"
              }
            },
            {
              "value": "row",
              "label": {
                "en": "Rows"
              }
            }
          ],
          "default": "column"
        },
        {
          "type": "text",
          "id": "block_max_height",
          "label": {
            "en": "Max height"
          },
          "placeholder": {
            "en": "E.g: 160px"
          }
        },
        {
          "type": "text",
          "id": "margin",
          "label": {
            "en": "Block margin"
          },
          "placeholder": {
            "en": "E.g: 5px 20px 5px 20px"
          },
          "info": {
            "en": "Order: Top Right Bottom Left"
          }
        }
      ]
    },
    {
      "type": "category",
      "name": {
        "en": "Category"
      },
      "settings": [
        {
          "type": "link_list",
          "id": "category",
          "label": {
            "en": "Category"
          }
        },
        {
          "type": "text",
          "id": "heading",
          "label": {
            "en": "Category's Heading"
          },
          "info": {
            "en": "Default is Menu title"
          }
        },
        {
          "type": "textarea",
          "id": "visible",
          "label": {
            "en": "Specific Collection to apply"
          },
          "placeholder": {
            "en": "E.g: Collection's title, Collection's title 2, ..."
          },
          "info": {
            "en": "Blank to apply for all collections"
          }
        },
        {
          "type": "text",
          "id": "margin",
          "label": {
            "en": "Block margin"
          },
          "placeholder": {
            "en": "E.g: 5px 20px 5px 20px"
          },
          "info": {
            "en": "Order: Top Right Bottom Left"
          }
        }
      ]
    },
    {
      "type": "banner",
      "name": {
        "en": "Banner"
      },
      "settings": [
        {
          "type": "image_picker",
          "id": "banner",
          "label": {
            "en": "Banner image"
          }
        },
        {
          "type": "textarea",
          "id": "visible",
          "label": {
            "en": "Specific Collection to apply"
          },
          "placeholder": {
            "en": "E.g: Collection's title, Collection's title 2, ..."
          },
          "info": {
            "en": "Blank to apply for all collections"
          }
        },
        {
          "type": "text",
          "id": "margin",
          "label": {
            "en": "Block margin"
          },
          "placeholder": {
            "en": "E.g: 5px 20px 5px 20px"
          },
          "info": {
            "en": "Order: Top Right Bottom Left"
          }
        },
        {
          "type": "header",
          "content": {
            "en": "Banner content"
          }
        },
        {
          "type": "textarea",
          "id": "text_1",
          "label": {
            "en": "Heading"
          }
        },
        {
          "type": "textarea",
          "id": "text_2",
          "label": {
            "en": "Subheading"
          }
        },
        {
          "type": "text",
          "id": "btn_label",
          "label": {
            "en": "Button label"
          }
        },
        {
          "type": "url",
          "id": "btn_url",
          "label": {
            "en": "Button URL"
          }
        },
        {
          "type": "range",
          "id": "btn_style",
          "label": {
            "en": "Button style"
          },
          "min": 1,
          "max": 3,
          "step": 1,
          "default": 1
        },
        {
          "type": "text",
          "id": "align",
          "label": {
            "en": "Alignment"
          },
          "placeholder": {
            "en": "E.g: center or right"
          }
        }
      ]
    },
    {
      "type": "style_content",
      "name": {
        "en": "[+] Heading & Subheading"
      },
      "settings": [
        {
          "type": "header",
          "content": {
            "en": "Heading settings"
          }
        },
        {
          "type": "text",
          "id": "content_fs_1",
          "label": {
            "en": "Font size"
          },
          "placeholder": {
            "en": "E.g: 24px"
          }
        },
        {
          "type": "color",
          "id": "content_cl_1",
          "label": {
            "en": "Color"
          }
        },
        {
          "type": "range",
          "id": "content_fw_1",
          "label": {
            "en": "Font weight"
          },
          "min": 0,
          "max": 900,
          "step": 100,
          "default": 0,
          "info": {
            "en": "0 is auto"
          }
        },
        {
          "type": "text",
          "id": "content_margin_1",
          "label": {
            "en": "Margin"
          },
          "placeholder": {
            "en": "E.g: 5px 8px 5px 8px"
          },
          "info": {
            "en": "Order: Top Right Bottom Left"
          }
        },
        {
          "type": "text",
          "id": "content_lh_1",
          "label": {
            "en": "Line height"
          },
          "placeholder": {
            "en": "E.g: 26px"
          }
        },
        {
          "type": "header",
          "content": {
            "en": "Suheading settings"
          }
        },
        {
          "type": "text",
          "id": "content_fs_2",
          "label": {
            "en": "Font size"
          },
          "placeholder": {
            "en": "E.g: 24px"
          }
        },
        {
          "type": "color",
          "id": "content_cl_2",
          "label": {
            "en": "Color"
          }
        },
        {
          "type": "range",
          "id": "content_fw_2",
          "label": {
            "en": "Font weight"
          },
          "min": 0,
          "max": 900,
          "step": 100,
          "default": 0,
          "info": {
            "en": "0 is auto"
          }
        },
        {
          "type": "text",
          "id": "content_margin_2",
          "label": {
            "en": "Margin"
          },
          "placeholder": {
            "en": "E.g: 5px 8px 5px 8px"
          },
          "info": {
            "en": "Order: Top Right Bottom Left"
          }
        },
        {
          "type": "text",
          "id": "content_lh_2",
          "label": {
            "en": "Line height"
          },
          "placeholder": {
            "en": "E.g: 26px"
          }
        }
      ]
    },
    {
      "type": "style_button",
      "name": {
        "en": "[+] Button"
      },
      "settings": [
        {
          "type": "text",
          "id": "btn_fs",
          "label": {
            "en": "Font size"
          },
          "placeholder": {
            "en": "E.g: 18px"
          }
        },
        {
          "type": "range",
          "id": "btn_fw",
          "label": {
            "en": "Font weight"
          },
          "min": 0,
          "max": 900,
          "step": 100,
          "default": 0,
          "info": {
            "en": "0 is auto"
          }
        },
        {
          "type": "text",
          "id": "btn_padding",
          "label": {
            "en": "Padding"
          },
          "placeholder": {
            "en": "E.g: 13px 50px"
          },
          "info": {
            "en": "Order: Top Right Bottom Left"
          }
        },
        {
          "type": "text",
          "id": "btn_margin",
          "label": {
            "en": "Margin"
          },
          "placeholder": {
            "en": "E.g: 13px 50px"
          },
          "info": {
            "en": "Order: Top Right Bottom Left"
          }
        },
        {
          "type": "color",
          "id": "btn_cl",
          "label": {
            "en": "Text color"
          }
        },
        {
          "type": "color",
          "id": "btn_bg_cl",
          "label": {
            "en": "Background color"
          }
        },
        {
          "type": "color",
          "id": "btn_hover_cl",
          "label": {
            "en": "Hover: Text color"
          }
        },
        {
          "type": "color",
          "id": "btn_hover_bg_cl",
          "label": {
            "en": "Hover: Background color"
          }
        },
        {
          "type": "range",
          "id": "btn_border_width",
          "label": {
            "en": "Border width"
          },
          "min": 1,
          "max": 10,
          "step": 1,
          "default": 1,
          "unit": "px"
        },
        {
          "type": "color",
          "id": "btn_border_cl",
          "label": {
            "en": "Border color"
          }
        },
        {
          "type": "color",
          "id": "btn_hover_border_cl",
          "label": {
            "en": "Hover: Border color"
          }
        },
        {
          "type": "text",
          "id": "btn_radius",
          "label": {
            "en": "Rounded corners"
          },
          "placeholder": {
            "en": "E.g: 42px"
          }
        }
      ]
    }
  ]
}
{% endschema %}